name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Build App
        run: npm run dump

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux --publish never

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/linux-unpacked

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win --publish never

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/windows-unpacked

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac --publish never

      - name: Upload macOS Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/macos-unpacked

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-build
          path: release_artifacts/linux

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-build
          path: release_artifacts/windows

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-build
          path: release_artifacts/mac

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Automated release from GitHub Actions."
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/linux/your-linux-artifact.AppImage
          asset_name: checkbnb-linux-${{ github.ref_name }}.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/windows/your-windows-artifact.exe
          asset_name: checkbnb-windows-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/mac/your-mac-artifact.dmg
          asset_name: checkbnb-mac-${{ github.ref_name }}.dmg
          asset_content_type: application/octet-stream
